<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liz.workspace.mapper.BoardMapper">

    <!-- BoardVO -->
    <resultMap id="boardMap" type="BoardDTO">
        <result column="board_id" property="boardId"/>
        <result column="category" property="category"/>
        <result column="user_name" property="userName"/>
        <result column="password" property="password"/>
        <result column="title" property="title"/>
        <result column="content" property="content"/>
        <result column="create_date" property="createDate"/>
        <result column="modify_date" property="modifyDate"/>
        <result column="view_count" property="viewCount"/>
    </resultMap>

    <!-- fileVO -->
    <resultMap id="fileMap" type="fileVO">
        <result column="file_id" property="fileId"/>
        <result column="origin_file_name" property="originFileName"/>
        <result column="modify_file_name" property="originFilePath"/>
        <result column="origin_file_path" property="modifyFileName"/>
    </resultMap>

    <!-- replyVO -->
    <resultMap id="replyMap" type="ReplyVO">
        <result column="reply_id" property="replyId"/>
        <result column="reply_content" property="replyContent"/>
        <result column="reply_date" property="replyDate"/>
    </resultMap>

    <!--TODO: 220420 resultMap_ board+collection => fileVo -->
    <!--<resultMap id="boardDetail" type="boardDetail" >
        <collection column="board_id" property=""  resultMap="fileMap">
        </collection>
    </resultMap>&ndash;&gt;-->

    <select id="findByBoardId">
        select * from board where board_id=1
    </select>

    <!-- 총 게시글수 -->
    <select id="getBoardCount" resultType="int">
        SELECT count(board_id) AS count
        FROM board
        WHERE board_id > 0
    </select>

    <!-- 게시판 목록 -->
     <select id="getBoardList" resultMap="boardMap">
           SELECT board_id, category, user_name, title, view_count, create_date, modify_date
           FROM board
           order by board_id desc
       </select>

    <!-- 검색옵션 -->
    <!-- <where>
         <if test="type == 'title'.toString()">subject LIKE CONCAT('%', #{keyword}, '%') </if>
         <if test="type == 'content'.toString()">content LIKE CONCAT('%', #{keyword}, '%') </if>
         <if test="type == 'userName'.toString()">userName LIKE CONCAT('%', #{keyword}, '%') </if>
        </where>-->

    <!-- 페이징 -->
    <select id="getBoardListCri" resultMap="boardMap">
        <![CDATA[
        SELECT board_id, category, user_name, title, view_count, create_date, modify_date
        FROM board
        where board_id > 0
        order by board_id desc
        LIMIT #{startRow}, #{pageAmount}
        ]]>
    </select>

    <!-- 게시판 등록 -->
    <insert id="writeBoard" parameterType="boardDTO" useGeneratedKeys="true"
            keyProperty="boardId">
        INSERT INTO board
            (`board_id`, `category`, `user_name`, `password`, `title`, `content`)
        VALUES (#{boardId}, #{category}, #{userName}, #{password}, #{title}, #{content})
    </insert>

    <!-- 게시판 상세보기 -->
    <select id="getBoardDetail" resultMap="boardMap">
        select board_id,
               user_name,
               password,
               create_date,
               modify_date,
               category,
               title,
               view_count,
               content
        from board
        where board_id = #{boardId}
    </select>

    <!-- 조회수 증가 -->
    <update id="updateViewCount" parameterType="Long"><![CDATA[
        UPDATE board
        SET view_count = view_count + 1
        WHERE board_id = #{boardId}
        ]]></update>

    <!-- 글 수정 -->
    <update id="editBoard" ><![CDATA[
        UPDATE board
        SET user_name = #{userName},
            password = #{password},
            title = #{title},
            content = #{content},
            modify_date = now()
        WHERE board_id = #{boardId}
    ]]></update>

    <!--글 삭제-->
    <delete id="deleteBoard">
        DELETE
        FROM board
        WHERE board_id = #{boardId}
    </delete>


    <!-- 검색 참고-->
    <!--<select id="">
        select * from
        ( select
        row rn, board_id, user_name, title, view_count, create_date, modify_date
        from board
        where
        (title like '%Test%' or content like '%Test%')
        and rownum <= 20
        )
        where rn > 10;
    </select>-->

</mapper>
